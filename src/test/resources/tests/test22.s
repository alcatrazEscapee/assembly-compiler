# Generated by Assembly Auto-Compiler by Alex O'Neill
# Setup
    .equ            LAST_RAM_WORD, 0x007FFFFC
    .global         _start
    .org            0x00000000
    .text

# Entry point
_start:
    movia           sp, LAST_RAM_WORD
    movia           r2, list
    ldw             r3, size(r0)
    call            SelectionSort
_end:
    br              _end

# ========== SelectionSort ==========
SelectionSort:
    subi            sp, sp, 40
    stw             r10, 36(sp)
    stw             r11, 32(sp)
    stw             r16, 28(sp)
    stw             r3, 24(sp)
    stw             r4, 20(sp)
    stw             r5, 16(sp)
    stw             r6, 12(sp)
    stw             r7, 8(sp)
    stw             r8, 4(sp)
    stw             r9, 0(sp)

    # r2 = list pointer
    # r3 = size of list
    # r16 = constant 1
    movi            r16, 1
    # loop while size is > 1
ss_while1:
    # find the max element in the list
    # r4 = local list pointer
    mov             r4, r2
    # r5 = pointer to the max element
    mov             r5, r4
    # r6 = the max element (starts at the first element)
    ldw             r6, 0(r4)
    # counter for loop iteration
    movi            r7, 0
ss_while2:
    # r8 = word at list pointer (temp)
    ldw             r8, 0(r4)
    ble             r8, r6, ss_if1
    # save the new max and index
    mov             r5, r4
    mov             r6, r8
ss_if1:
    # Increment counter and pointer index
    addi            r7, r7, 1
    addi            r4, r4, 4
    blt             r7, r3, ss_while2
    # swap the two values (index size-1 and address r5)
    # r8 = memory address of size-1 index
    subi            r8, r3, 1
    muli            r8, r8, 4
    add             r8, r8, r2
    # r9 = memory address of r5
    mov             r9, r5
    # load values into r10, r11
    ldw             r10, 0(r8)
    ldw             r11, 0(r9)
    # save values in opposite order
    stw             r11, 0(r8)
    stw             r10, 0(r9)
    # decrement the size register and sort again
    subi            r3, r3, 1
    bgt             r3, r16, ss_while1

    ldw             r10, 36(sp)
    ldw             r11, 32(sp)
    ldw             r16, 28(sp)
    ldw             r3, 24(sp)
    ldw             r4, 20(sp)
    ldw             r5, 16(sp)
    ldw             r6, 12(sp)
    ldw             r7, 8(sp)
    ldw             r8, 4(sp)
    ldw             r9, 0(sp)
    addi            sp, sp, 40
    ret

# Word-Aligned Variables
    .org            0x00001000

size:
    .word           20
list:
    .word           4, 2, 28, 110, 6, 69, 420, 123, 321, 3, 0, 11, 9, 16, 21, 11, 110, 3, 2, 1

# End of Assembly Source
    .end