# Generated by Assembly Auto-Compiler by Alex O'Neill
# Setup
    .equ            LAST_RAM_WORD, 0x007FFFFC
    .global         _start
    .org            0x00000000
    .text

# Entry point
_start:
    movia           sp, LAST_RAM_WORD
    blt             r0, r1, main_if1
    beq             r2, r3, main_if1a
    beq             r4, r5, main_if1
main_if1a:
    call            TestLoops
    br              main_else1
main_if1:
    call            TestLoops2
main_else1:
_end:
    br              _end

# ========== TestLoops ==========
TestLoops:
    subi            sp, sp, 4
    stw             r0, 0(sp)

tl_while1:
    mov             r0, r0
    bge             r0, r1, tl_while1a
    blt             r1, r2, tl_while1
tl_while1a:
    bgt             r3, r4, tl_while1b
    ble             r4, r5, tl_while1
tl_while1b:

    ldw             r0, 0(sp)
    addi            sp, sp, 4
    ret

# ========== TestLoops2 ==========
TestLoops2:
    subi            sp, sp, 12
    stw             r0, 8(sp)
    stw             r3, 4(sp)
    stw             r4, 0(sp)

    movi            r3, '0'
    movi            r4, '9'
tl1_while1:
    mov             r0, r0
    bge             r2, r3, tl1_while1a
    bgt             r2, r4, tl1_while1
tl1_while1a:

    ldw             r0, 8(sp)
    ldw             r3, 4(sp)
    ldw             r4, 0(sp)
    addi            sp, sp, 12
    ret

# End of Assembly Source
    .end
